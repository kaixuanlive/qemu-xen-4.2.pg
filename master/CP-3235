# HG changeset patch
# Parent 6d7b357d35a23f9da7c9714c4eafa477e7ca036e

[CP-3235] Allow Xen Platform PCI Device's Vendor ID, Device ID and Revision
to be overriden using xenstore keys in vm-data. Also code the subsystem
Device ID to follow the main Device ID rather than be hardcoded to 0x0001.

diff -r 6d7b357d35a2 -r 3e8c0424b448 hw/xen_platform.c
--- a/hw/xen_platform.c	Mon Mar 05 16:17:58 2012 +0000
+++ b/hw/xen_platform.c	Tue Mar 06 14:51:28 2012 +0000
@@ -568,10 +568,10 @@ void pci_xen_platform_init(PCIBus *bus)
     d = (PCIXenPlatformState *)pci_register_device(
         bus, "xen-platform", sizeof(PCIXenPlatformState), -1, NULL, NULL);
     pch = (struct pci_config_header *)d->pci_dev.config;
-    pch->vendor_id = 0x5853;
-    pch->device_id = 0x0001;
+
+    xenstore_parse_pf_config(pch);
+
     pch->command = 3; /* IO and memory access */
-    pch->revision = 1;
     pch->api = 0;
     pch->class = 0x1; /* Storage device class */
     pch->subclass = 0x0; /* SCSI subclass */
@@ -583,8 +583,8 @@ void pci_xen_platform_init(PCIBus *bus)
 
     /* Microsoft WHQL requires non-zero subsystem IDs. */
     /* http://www.pcisig.com/reflector/msg02205.html.  */
-    pch->subsystem_vendor_id = pch->vendor_id; /* Duplicate vendor id.  */
-    pch->subsystem_id        = 0x0001;         /* Hardcode sub-id as 1. */
+    pch->subsystem_vendor_id = pch->vendor_id; /* Duplicate vendor id. */
+    pch->subsystem_id        = pch->device_id; /* Duplicate device id. */
 
     pci_register_io_region(&d->pci_dev, 0, 0x100,
                            PCI_ADDRESS_SPACE_IO, platform_ioport_map);
diff -r 6d7b357d35a2 -r 3e8c0424b448 qemu-xen.h
--- a/qemu-xen.h	Mon Mar 05 16:17:58 2012 +0000
+++ b/qemu-xen.h	Tue Mar 06 14:51:28 2012 +0000
@@ -67,6 +67,7 @@ void xenstore_init(void);
 uint32_t xenstore_read_target(void);
 void xenstore_parse_domain_config(int domid);
 int xenstore_parse_disable_pf_config(void);
+void xenstore_parse_pf_config(struct pci_config_header *pch);
 int xenstore_fd(void);
 void xenstore_process_event(void *opaque);
 void xenstore_record_dm_state(const char *state);
diff -r 6d7b357d35a2 -r 3e8c0424b448 xenstore.c
--- a/xenstore.c	Mon Mar 05 16:17:58 2012 +0000
+++ b/xenstore.c	Tue Mar 06 14:51:28 2012 +0000
@@ -907,6 +907,46 @@ int xenstore_parse_disable_pf_config ()
     return disable_pf;
 }
 
+void xenstore_parse_pf_config(struct pci_config_header *pch)
+{
+    char *node = NULL, *val;
+    unsigned int len;
+
+    /* Defaults */
+    pch->vendor_id = 0x5853;
+    pch->device_id = 0x0001;
+    pch->revision = 1;
+
+    if ( pasprintf(&node, "/local/domain/%u/vm-data/pf_vendor_id",domid) >= 0 ) {
+        if ( (val = xs_read(xsh, XBT_NULL, node, &len)) != NULL ) {
+            pch->vendor_id = strtoul(val, NULL, 0);
+            free(val);
+        }
+        free(node);
+        node = NULL;
+    }
+        
+    if ( pasprintf(&node, "/local/domain/%u/vm-data/pf_device_id",domid) >= 0 ) {
+        if ( (val = xs_read(xsh, XBT_NULL, node, &len)) != NULL ) {
+            pch->device_id = strtoul(val, NULL, 0);
+            free(val);
+        }
+        free(node);
+        node = NULL;
+    }
+        
+    if ( pasprintf(&node, "/local/domain/%u/vm-data/pf_revision",domid) >= 0 ) {
+        if ( (val = xs_read(xsh, XBT_NULL, node, &len)) != NULL ) {
+            pch->revision = strtoul(val, NULL, 0);
+            free(val);
+        }
+        free(node);
+        node = NULL;
+    }
+
+    fprintf(logfile, "PF: VEN=%04x DEV=%04x REV=%02x\n", pch->vendor_id, pch->device_id, pch->revision);
+}
+
 int xenstore_fd(void)
 {
     if (xsh)
